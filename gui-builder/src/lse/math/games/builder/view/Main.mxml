<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns="lse.math.games.builder.view.*"
			   backgroundColor="0xB7BABC" minWidth="692">

	<fx:Script>
        <![CDATA[		
		import mx.controls.Alert;
		import mx.core.FlexGlobals;
		import mx.utils.StringUtil;
		
		private function getClickCallback(idx:int):Function 
		{
			switch (idx) {
				case 0: return actions.addChild;
				case 1: return actions.deleteNode;
				case 2: return actions.cutIset;
				case 3: return actions.dissolveIset;
				case 4: return actions.mergeIsets;	
				case 5: return actions.changePlayer;							
				case 6: return actions.makeChance;				
			}
			throw new Error("callback for index " + idx + " not found");
		}
		
		[Bindable]
		public var seed:String;
		
		[Bindable]
		public var nfalgos:Array = new Array();
		
		[Bindable]
		public var xfalgos:Array = new Array();

		private function initVars():void 
		{			
			// FOR TESTING ONLY... comment this and uncomment one below before building for prod
			//var flashvars:Object = {
			//	menum: "label=Lrs Find All Eq;toolTip=Lrs Find All Equilibria;type=nf;url=http://localhost:8888/matrix/",
			//	msolve: "label=Lemke Find Eq;toolTip=Lemke Find One Equilibrium;type=nf;url=http://localhost:8888/matrix/",   
			//	xsolve: "label=Lemke Find Eq;toolTip=Lemke Find One Equilibrium (Sequence Form);type=xf;url=http://localhost:8888/tree/"
			//};
			var flashvars:Object = FlexGlobals.topLevelApplication.parameters;
			for (var param:String in flashvars) {
				if (param == "seed") {
					seed = StringUtil.trim(flashvars[param]);
				} else {
					//Alert.show("'" + param + "'='" + flashvars[param] + "'");
					// TODO: use XMLListCollection and pass in XML to load and use instead of this homemade parsing
					var pvalue:String = StringUtil.trim(flashvars[param]);				
					var o:Object = new Object();
					o.uid = param;
					
					for each (var pair:String in pvalue.split(";")) {
						var keyvalue:Array = pair.split("=");
						var key:String = StringUtil.trim(keyvalue[0]);
						var value:String = StringUtil.trim(keyvalue[1]);
						o[key] = value;
						//Alert.show("'" + key + "'='" + o[key] + "'");
					}
					o.service = httpService;
					
					if (o["type"] == "nf") {
						nfalgos.push(o);
					} else if (o["type"] == "xf") {
						xfalgos.push(o);
					} /*else {
						trace("Unrecognized type");
					}*/
				}
			}
		}
        ]]>
    </fx:Script>
	
	<!-- TODO: only cornerRadius seems to be working? -->
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.myButton {
			cornerRadius:0;
		}
		.mxTabLabels {
			textFieldClass: ClassReference("mx.core.UIFTETextField");
			fontFamily: Helvetica;
			fontWeight: bold;			
		}
	</fx:Style>
	
	<fx:Declarations>
		<mx:HTTPService id="httpService"
		 concurrency="single"		 
		 method="POST"		 
		 resultFormat="text"
		 showBusyCursor="true"
		 fault="Alert.show(event.fault.faultCode + ':' + event.fault.faultString + ':' + event.fault.faultDetail)"
		 result="if (ExternalInterface.available) {ExternalInterface.call('writeSolution', event.result);} else { trace(event.result); }"
		 />
		<TreeGrid id="grid" xmlns="lse.math.games.builder.viewmodel.*" />
		<PainterChain id="treePainter" xmlns="lse.math.games.builder.view.*">
			<links>
				<fx:Vector type="lse.math.games.builder.view.IPainter">
					<TreeGridPainter xmlns="lse.math.games.builder.viewmodel.*" grid="{grid}" />
					<TreeGridSetPainter xmlns="lse.math.games.builder.viewmodel.*" grid="{grid}" />
				</fx:Vector>
			</links>
		</PainterChain>
		<TreeGridActionFactory id="actions" xmlns="lse.math.games.builder.viewmodel.*" />		
		<MatrixPainter id="matrixPainter" xmlns="lse.math.games.builder.viewmodel.*" grid="{grid}" />
		<TreeGridPresenter id="controller" xmlns="lse.math.games.builder.presenter.*" grid="{grid}" getDataUpdateAction="actions.outcomeDataUpdate" />
	</fx:Declarations>
		
	<s:Group left="0" right="0" top="0" bottom="0">
		<s:BorderContainer top="30" bottom="0" left="0" right="185" backgroundColor="0xe0e0e0" backgroundAlpha="1" borderColor="0x808080">
			<mx:TabNavigator tabHeight="22" top="3" bottom="-1" left="-1" right="-1" depth="2" tabWidth="120" tabOffset="5" paddingTop="0" backgroundColor="0xffffff" tabStyleName="mxTabLabels" change="controller.canvas = event.target.selectedIndex == 0 ? canvas : canvasNF; algos.source = event.target.selectedIndex == 0 ? xfalgos : nfalgos; algoComboBox.selectedIndex = 0;">
				<s:NavigatorContent label="Extensive Form">
					
					<s:Scroller id="scrollbar" width="100%" height="100%">
						<s:Group id="viewport" width="100%" height="100%">
							<Canvas id="canvas" width="100%" height="100%" click="controller.doActionAt(canvas.mouseX, canvas.mouseY)" painter="{treePainter}" preinitialize="controller.canvas = canvas;" />
						</s:Group>
					</s:Scroller>
					
					<s:Label id="info" top="5" right="{scrollbar.verticalScrollBar.visible ? 20 : 5}" fontFamily="Helvetica" text="{int(canvas.width)} x {int(canvas.height)} ({int(treePainter.scale * 100)}%)" />
					<s:Label id="filename" top="25" right="{scrollbar.verticalScrollBar.visible ? 20 : 5}" fontFamily="Helvetica" text="{controller.fileName}" />
					
					<s:HGroup gap="-1" left="283" right="0" top="-21" depth="3" verticalAlign="bottom" clipAndEnableScrolling="true">
						<mx:ToggleButtonBar id="opModeBar2" buttonHeight="21" buttonWidth="23" buttonStyleName="myButton" firstButtonStyleName="myButton" lastButtonStyleName="myButton" selectedIndex="0" creationComplete="controller.getClickAction = getClickCallback(opModeBar2.selectedIndex)" valueCommit="controller.getClickAction = getClickCallback(opModeBar2.selectedIndex);">
							<mx:dataProvider>					
								<mx:ArrayCollection>
									<mx:source>
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/add.png')" toolTip="Add Child" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/delete.png')" toolTip="Delete Node" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/cut_red.png')" toolTip="Cut Iset" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/link_break.png')" toolTip="Dissolve Iset" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/link.png')" toolTip="Merge Isets" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/user_go.png')" toolTip="Change Player" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/user_delete.png')" toolTip="Make Chance" /> 
									</mx:source>
								</mx:ArrayCollection>
							</mx:dataProvider>
						</mx:ToggleButtonBar>
						<mx:Spacer width="20" />
						<mx:Button cornerRadius="0" width="23" height="21" icon="@Embed(source='../../../../../../assets/icons/shape_rotate_clockwise.png')" toolTip="Rotate Clockwise" click="controller.doAction(actions.rotateRight)"/>
						<mx:Button cornerRadius="0" width="23" height="21" icon="@Embed(source='../../../../../../assets/icons/shape_rotate_anticlockwise.png')" toolTip="Rotate Counterclockwise" click="controller.doAction(actions.rotateLeft)"/>
					</s:HGroup>

				</s:NavigatorContent>
				<s:NavigatorContent label="Strategic Form">
					<s:Scroller id="scrollbarNF" width="100%" height="100%">
						<s:Group id="viewportNF" width="100%" height="100%">
							<Canvas id="canvasNF" width="100%" height="100%" painter="{matrixPainter}" />
						</s:Group>
					</s:Scroller>
					
					<s:Label id="infoNF" top="5" right="{scrollbarNF.verticalScrollBar.visible ? 20 : 5}" fontFamily="Helvetica" text="{int(canvasNF.width)} x {int(canvasNF.height)} ({int(matrixPainter.scale * 100)}%)" />
					<s:Label id="filenameNF" top="25" right="{scrollbar.verticalScrollBar.visible ? 20 : 5}" fontFamily="Helvetica" text="{controller.fileName}" />					
					
					<s:HGroup gap="-1" left="283" right="0" top="-21" depth="3" verticalAlign="bottom" clipAndEnableScrolling="true">
						<mx:ToggleButtonBar id="nfReducedBar" buttonHeight="21" buttonWidth="23" buttonStyleName="myButton" firstButtonStyleName="myButton" lastButtonStyleName="myButton" selectedIndex="0" valueCommit="controller.isNormalReduced = (event.target.selectedIndex == 0);">
							<mx:dataProvider>					
								<mx:ArrayCollection>
									<mx:source>
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/arrow_in.png')" toolTip="Reduced Strategic Form" /> 
										<fx:Object icon="@Embed(source='../../../../../../assets/icons/arrow_out.png')" toolTip="Full Strategic Form" /> 										
									</mx:source>
								</mx:ArrayCollection>
							</mx:dataProvider>
						</mx:ToggleButtonBar>
					</s:HGroup>
				</s:NavigatorContent>				
			</mx:TabNavigator>
		</s:BorderContainer>
	
		<mx:DataGrid id="leaves" dataProvider="{controller.outcomeData}" bottom="0" top="30" right="0" width="180" editable="true" borderColor="0x808080" draggableColumns="false" sortableColumns="false" change="controller.selectedNode = (leaves.selectedItem != null ? leaves.selectedItem.uid : -1);" focusOut="controller.selectedNode = -1" focusIn="controller.selectedNode = (leaves.selectedItem != null ? leaves.selectedItem.uid : -1);">
			<mx:columns>
				<mx:DataGridColumn headerText="Sequence" dataField="leaf" width="110" editable="true"/>				
				<mx:DataGridColumn headerText="{controller.player1Name}" dataField="pay1" width="33" editable="true" />
				<mx:DataGridColumn headerText="{controller.player2Name}" dataField="pay2" width="33" editable="{!controller.isZeroSum}" />
			</mx:columns>
		</mx:DataGrid>
				
		<s:HGroup left="0" height="30" top="0" paddingTop="3" gap="-1" right="0" clipAndEnableScrolling="true">
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/page_white.png')" toolTip="Clear" click="controller.clear()" />
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/folder_page.png')" toolTip="Open" click="controller.open()" />	
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/page_save.png')" toolTip="Save" click="controller.save()" />	
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/page_white_picture.png')" toolTip="Export As PNG File" click="controller.image()" />			
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/page_white_vector.png')" toolTip="Export As FIG File" click="controller.fig()" />			
			<mx:Spacer width="23"/>
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/cog_go.png')" toolTip="Run" click="controller.runAlgorithm(algoComboBox.selectedItem, seed)" />			
			<mx:Spacer width="4"/>
			<s:ComboBox id="algoComboBox" width="106" height="24" toolTip="Select Algorithm" fontFamily="Helvetica" preinitialize="initVars();" selectedIndex="0">
				<s:dataProvider>
					<mx:ArrayCollection id="algos" source="{xfalgos}" />					
				</s:dataProvider>
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer>							
							<s:Label left="5" height="22" width="85" maxDisplayedLines="1" verticalAlign="middle" toolTip="{data.toolTip}" text="{data.label}" />
						</s:ItemRenderer>						
					</fx:Component>					
				</s:itemRenderer>
			</s:ComboBox>
			<mx:Spacer width="23"/>
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/arrow_undo.png')" toolTip="Undo" click="controller.undo()" />
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/arrow_redo.png')" toolTip="Redo" click="controller.redo()" />				
			<mx:Spacer width="23"/>			
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/text_replace.png')" toolTip="Auto Label" click="controller.doAction(actions.label)" />				
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/tumbling_dice.png')" toolTip="Generate Random Payoffs" click="controller.doAction(actions.randomPayoffs)" />
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/sum.png')" toolTip="Zero Sum {controller.isZeroSum ? 'ON' : 'OFF'}" toggle="true" selected="{controller.isZeroSum}" change="controller.isZeroSum = event.target.selected;" />
			<mx:Button id="recallButton" cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/lightbulb.png')" toolTip="Make Perfect Recall" click="controller.doAction(actions.perfectRecall)" />
			<mx:Spacer width="20" />		
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/zoom_in.png')" toolTip="Zoom In" click="controller.zoomIn()" />
			<mx:Button cornerRadius="0" width="23" height="24" icon="@Embed(source='../../../../../../assets/icons/zoom_out.png')" toolTip="Zoom Out" click="controller.zoomOut()" />			
			<mx:Spacer width="23" />
			<mx:ColorPicker width="23" height="24" selectedColor="{controller.player1Color}" toolTip="Player 1's Color" change="controller.player1Color = event.target.selectedColor;"/>
			<mx:Spacer width="4"/>
			<mx:ColorPicker width="23" height="24" selectedColor="{controller.player2Color}" toolTip="Player 2's Color" change="controller.player2Color = event.target.selectedColor;"/>
			<mx:Spacer width="4"/>
			<s:ComboBox id="comboBox" width="106" height="24" toolTip="Select Font" fontFamily="{controller.fontFamily}" selectedItem="{controller.fontFamily}" change="controller.fontFamily = comboBox.selectedItem;">
				<s:dataProvider>
					<mx:ArrayCollection id="arrColl" source="{controller.availableFontFamilies}">
						<mx:sort><mx:Sort /></mx:sort>
					</mx:ArrayCollection>
				</s:dataProvider>
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer>							
							<s:Label left="5" height="22" width="85" maxDisplayedLines="1" verticalAlign="middle" fontFamily="{data}" toolTip="{data}" text="{data}" />
						</s:ItemRenderer>						
					</fx:Component>					
				</s:itemRenderer>
			</s:ComboBox>
		</s:HGroup>
	</s:Group>
</s:Application>